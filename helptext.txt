:main_array_devices_help:
**Colored Status Indicator** the significance of the color indicator at the beginning of each line in *Array Devices* is as follows:

<i class='fa fa-circle orb green-orb'></i>Normal operation, device is active.

<i class='fa fa-circle orb grey-orb'></i>Device is in standby mode (spun-down).

<i class='fa fa-warning orb yellow-orb'></i>Device contents emulated.

<i class='fa fa-times orb red-orb'></i>Device is disabled, contents emulated.

<i class='fa fa-square orb blue-orb'></i>New device.

<i class='fa fa-square orb grey-orb'></i>No device present, position is empty.

**Identification** is the *signature* that uniquely identifies a storage device. The signature
includes the device model number, serial number, linux device id, and the device size.

**Temp.** (temperature) is read directly from the device. You configure which units to use on
the [Display Preferences](Settings/DisplaySettings) page.  We do not read the temperature of spun-down hard
drives since this typically causes them to spin up; instead we display the `*` symbol.  We also
display the `*` symbol for SSD and Flash devices, though sometimes these devices do report a valid
temperature, and sometimes they return the value `0`.

**Size, Used, Free** reports the total device size, used space, and remaining space for files.  These
units are also configured on the [Display Preferences](Settings/DisplaySettings) page.  The
amount of space used will be non-zero even for an empty disk due to file system overhead.

*Note: for a multi-device cache pool, this data is for the entire pool as returned by btrfs.*

**Reads, Writes** are a count of I/O requests sent to the device I/O drivers.  These statistics may
be cleared at any time, refer to the Array Status section below.

**Errors** counts the number of *unrecoverable* errors reported by the device
I/O drivers. Missing data due to unrecoverable array read errors is filled in on-the-fly using parity
reconstruct (and we attempt to write this data back to the sector(s) which failed). Any unrecoverable
write error results in *disabling* the disk.

**FS** indicates the file system detected in partition 1 of the device.

**View** column contains a folder icon indicating the device is *mounted*. Click the icon to
browse the file system.

If "Display array totals" is enable on the [Display Preferences](Settings/DisplaySettings) page, a
**Total** line is included which provides a tally of the device statistics, including the average temperature
of your devices.

The Array must be Stopped in order to change Array device assignments.

An Unraid array consists of one or two Parity disks and a number of Data disks. The Data
disks are exclusively used to store user data, and the Parity disk(s) provides the redundancy necessary
to recover from disk failures.

Since data is not striped across the array, the Parity disk(s) must be as large, or larger than the largest Data
disk.  Parity should also be your highest performance drive.

Each Data disk has its own file system and can be exported as a
separate share.

Click on the Device name to configure individual device settings and launch certain utilities.
:end

:main_slots_help:
**Slots** select the number of device slots in your server designated for Array devices.
The minimum number of Array slots is 2, and you must have at least one device assigned to the array.
:end

:cache_devices_help:
**Colored Status Indicator** the significance of the color indicator at the beginning of each line in *Pool Devices* is as follows:

<i class='fa fa-circle orb green-orb'></i>Normal operation, device is active.

<i class='fa fa-circle orb grey-orb'></i>Device is in standby mode (spun-down).

<i class='fa fa-square orb blue-orb'></i>New device.

<i class='fa fa-square orb grey-orb'></i>No device present, position is empty.

**Pool Devices** is a single device, or pool of multiple devices, *outside* the Unraid array.  It may be exported for network access just
like an Array device.  Being outside the Unraid array results in significantly faster write access.

There are two ways to configure the Pool devices:

1. As a single device, or
2. As a multi-device pool.

When configured as a single device you may format the device using any supported file system (btrfs, reiserfs,
or xfs).  This configuration offers the highest performance, but at the cost of no data protection - if the
single pool device fails all data contained on it may be lost.

When configured as a multi-device pool, Unraid OS will automatically select *btrfs-raid1* format (for both data
and meta-data).  btrfs permits any number of devices to be added to the pool and each copy of data is guaranteed
to be written to two different devices.  Hence the pool can withstand a single-disk failure without losing data.

When [User Shares](/Settings/ShareSettings) are enabled, user shares may be configured to
automatically make use of the Pool device in order to
speed up writes.  A special background process called the *mover* can be scheduled to run
periodically to move user share files off the Cache and onto the Array.
:end

:cache_slots_help:
**Slots** select the number of device slots in your server designated for Cache devices.
:end

:boot_device_help:
Vital array configuration is maintained on the USB Flash device; for this reason, it must remain
plugged in to your server.  Click on [Flash](/Main/Flash?name=flash) to see the GUID and registration
information, and to configure export settings.  Since the USB Flash device is formatted using FAT file system,
it may only be exported using SMB protocol.
:end

:array_status_help:
**Colored Status Indicator** the significance of the color indicator of the *Array* is as follows:

<i class='fa fa-circle orb green-orb'></i>Array is Started and Parity is valid.

<i class='fa fa-circle orb grey-orb'></i>Array is Stopped, Parity is valid.

<i class='fa fa-warning orb yellow-orb'></i>Array is Started, but Parity is invalid.

<i class='fa fa-warning orb grey-orb'></i>Array is Stopped, Parity is invalid.

:end

:array_devices_help:
#### Assigning Devices

An unRAID disk array consists of a single parity disk and a number of data disks. The data
disks are exclusively used to store user data, and the parity disk provides the redundancy necessary
to recover from any single disk failure.

Note that we are careful to use the term *disk* when referring to an array storage device.  We
use the term *hard drive* (or sometimes just *drive*) when referring to an actual hard disk drive (HDD)
device. This is because in a RAID system it is possible to read/write an array disk whose corresponding
hard drive is disabled or even missing! In addition, it is useful to be able to ask, "which device is
assigned to be the parity disk?"; or, "which device corresponds to disk2?".

We therefore need a way to assign hard drives to array disks. This is accomplished here on the
Main page when the array is stopped. There is a drop-down box for each array disk which lists all the
unassigned devices. To assign a device simply select it from the list. Each time a device
assignment is made, the system updates a configuration file to record the assignment.

#### Requirements

Unlike traditional RAID systems which stripe data across all the array devices, an unRAID server
stores files on individual hard drives. Consequently, all file write operations will involve both the
data disk the file is being written to, and the parity disk. For these reasons,

* the parity disk size must be as large or larger than any of the data disks,

and

* given a choice, the parity disk should be the fastest disk in your collection.

#### Guidelines

Here are the steps you should follow when designing your unRAID disk array:

1. Decide which hard drive you will use for parity, and which hard drives you will use for
data disk1, disk2, etc., and label them in some fashion. Also, find the serial number of each hard
drive and jot it down somewhere; you will need this information later.

2. Install your hard drive devices, boot unRAID Server and bring up the webGui. If this is a fresh system
build, then the Main page will show no disks installed. This doesn't mean the system can't detect your
hard drives; it just means that none have been assigned yet.

3. Remember the serial numbers you recorded back in step 1? For parity and each data disk, select the
proper hard drive based on its serial number from the drop down list.

#### Hot Plug

You may also *hot plug* hard drives into your server if your hardware supports it. For example,
if you are using hard drive cages, you may simply plug them into your server while powered on and
with array Stopped. Refresh the Main page to have new unassigned devices appear in the assignment
dropdown lists.

#### Next Steps

Once you have assigned all of your hard drives, refer to the Array Status section below
and Start the array.
:end

:encryption_help:
#### Encryption input

With array Stopped, the user can specify a new encryption key. Note that once a device
is formatted with a particular key it may only be opened using that same key. Changing the encryption key requires
encrypted devices to be reformatted **resulting in permanent loss of all existing data on those devices.**

#### Passphrase

Enter a passphrase of up to 512 characters. It is highly advisable to only use the 95 printable characters from the
first 128 characters of the [ASCII table](https://en.wikipedia.org/wiki/ASCII), as they will always have the same binary
representation. Other characters may have different encoding depending on system configuration and your passphrase will
not work with a different encoding. If you want a longer passphrase or to include binary data, upload a keyfile instead.

Please refer to the [cryptsetup FAQ](https://gitlab.com/cryptsetup/cryptsetup/wikis/FrequentlyAskedQuestions#5-security-aspects)
for what constitutes a *secure* passphrase.

**Memorize** this passphrase. **IF LOST, ENCRYPTED CONTENT CANNOT BE RECOVERED!**

#### Keyfile

Select a local keyfile with a stored encryption key or a binary file. The maximum size of the keyfile is 8M (8388608 byte).

**Backup** your local keyfile. **IF LOST, ENCRYPTED CONTENT CANNOT BE RECOVERED!**
:end

:info_warning_temp_help:
*Warning disk temperature* sets the warning threshold for this hard disk temperature. Exceeding this threshold will result in a warning notification.

A value of zero will disable the warning threshold (including notifications).
:end

:info_critical_temp_help:
*Critical disk temperature* sets the critical threshold for this hard disk temperature. Exceeding this threshold will result in an alert notification.

A value of zero will disable the critical threshold (including notifications).
:end

:info_file_system_help:
Enter the desired file system type.  Changing the file system type of a device will permit you to reformat
that device using the new file system.  Be aware that **all existing data on the device will be lost**.
:end

:info_comments_help:
This text will appear under the *Comments* column for the share in Windows Explorer.
Enter anything you like, up to 256 characters.
:end

:info_warning_utilization_help:
*Warning disk utilization* sets the warning threshold for this hard disk utilization. Exceeding this threshold will result in a warning notification.

When the warning threshold is set equal or greater than the critical threshold, there will be only critical notifications (warnings are not existing).

A value of zero will disable the warning threshold (including notifications).
:end

:info_critical_utilization_help:
*Critical disk utilization* sets the critical threshold for this hard disk utilization. Exceeding this threshold will result in an alert notification.

A value of zero will disable the critical threshold (including notifications).
:end

:info_btrfs_balance_help:
**Balance** will run the *btrfs balance* program to restripe the extents across all pool devices, for example,
to convert the pool from raid1 to raid0 or vice-versa.

When a *full balance* is performed, it basically rewrites everything in the current filesystem.

A *mode conversion* affects the btrfs data extents; metadata always uses raid1 and is converted to raid1 if necessary by any balance operation.

The run time is potentially very long, depending on the filesystem size and speed of the device.

Unraid uses these default options when creating a multiple-device pool:

`-dconvert=raid1 -mconvert=raid1`

For more complete documentation, please refer to the btrfs-balance [Manpage](https://btrfs.wiki.kernel.org/index.php/Manpage/btrfs-balance)

*Note: raid5 and raid6 are generally still considered **experimental** by the Linux community*
:end

:info_balance_cancel_help:
**Cancel** will cancel the balance operation in progress.
:end

:info_btrfs_scrub_help:
**Scrub** runs the *btrfs scrub* program which will read all data and metadata blocks from all
devices and verify checksums.

If *Repair corrupted blocks* is checked, *btrfs scrub* will repair corrupted blocks if there’s a correct copy available.
:end

:info_scrub_cancel_help:
**Cancel** will cancel the Scrub operation in progress.
:end

:info_btrfs_check_help:
**Check** will run the *btrfs check* program to check file system integrity on the device.

The *Options* field is initialized with *--readonly* which specifies check-only.  If repair is needed, you should run
a second Check pass, setting the *Options* to *--repair*; this will permit *btrfs check* to fix the file system.

After starting a Check, you should Refresh to monitor progress and status.  Depending on
how large the file system is, and what errors might be present, the operation can take **a long time** to finish (hours).
Not much info is printed in the window, but you can verify the operation is running by observing the read/write counters
increasing for the device on the Main page.
:end

:info_check_cancel_help:
**Cancel** will cancel the Check operation in progress.
:end

:info_reiserfs_check_help:
**Check** will run the *reiserfsck* program to check file system integrity on the device.

The *Options* field may be filled in with specific options used to fix problems in the file system. Typically, you
first run a Check pass leaving *Options* blank.  Upon completion, if *reiserfsck* finds any problems, you must
run a second Check pass, using a specific option as instructed by the first *reiserfsck* pass.

After starting a Check you should Refresh to monitor progress and status.  Depending on
how large the file system is, and what errors might be present, the operation can take **a long time** to finish (hours).
Not much info is printed in the window, but you can verify the operation is running by observing the read/write counters
increasing for the device on the Main page.
:end

:info_reiserfs_cancel_help:
**Cancel** will cancel the Check operation in progress.
:end

:info_xfs_check_help:
**Check** will run the *xfs_repair* program to check file system integrity on the device.

The *Options* field is initialized with *-n* which specifies check-only.  If repair is needed, you should run
a second Check pass, setting the *Options* blank; this will permit *xfs_repair* to fix the file system.

After starting a Check, you should Refresh to monitor progress and status.  Depending on
how large the file system is, and what errors might be present, the operation can take **a long time** to finish (hours).
Not much info is printed in the window, but you can verify the operation is running by observing the read/write counters
increasing for the device on the Main page.
:end

:info_xfs_cancel_help:
**Cancel** will cancel the Check operation in progress.
:end

:info_smart_notifications_help:
SMART notifications are generated on either an increasing RAW value of the attribute, or a decreasing NORMALIZED value which reaches a predefined threshold set by the manufacturer.

Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:info_tolerance_level_help:
A tolerance level may be given to prevent that small changes result in a notification. Setting a too high tolerance level may result in critical changes without a notification.

Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:info_controller_type_help:
By default automatic controller selection is done by smartctl to read the SMART information. Certain controllers however need specific settings for smartctl to work.
Use this setting to select your controller type and fill-in the specific disk index and device name for your situation. Use the manufacturer's documentation to find the relevant information.

Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:info_attribute_notifications_help:
The user can enable or disable notifications for the given SMART attributes. It is recommended to keep the default, which is ALL selected attributes,
when certain attributes are not present on your hard disk or do not provide the correct information, these may be excluded.
In addition custom SMART attributes can be entered to generate notifications. Be careful in this selection,
it may cause an avalance of notifcations if inappropriate SMART attributes are chosen.

Each disk may have its own specific setting overruling the 'default' setting (see global SMART settings under Disk Settings).
:end

:selftest_history_help:
Press **Show** to view the self-test history as is kept on the disk itself.
This feature is only available when the disk is in active mode.
:end

:selftest_error_log_help:
Press **Show** to view the error report as is kept on the disk itself.
This feature is only available when the disk is in active mode.
:end

:selftest_short_test_help:
Starts a *short* SMART self-test, the estimated duration can be viewed under the *Capabilities* section. This is usually a few minutes.

When the disk is spun down, it will abort any running self-test.
This feature is only available when the disk is in active mode.
:end

:selftest_long_test_help:
Starts an *extended* SMART self-test, the estimated duration can be viewed under the *Capabilities* section. This is usually several hours.

When the disk is spun down, it will abort any running self-test. It is advised to disable the spin down timer of the disk
to avoid interruption of this self-test.

This feature is only available when the disk is in active mode.
:end

:selftest_result_help:
When no test is running it will show here the latest obtained self-test result (if available).
Otherwise a progress indicator (percentage value) is shown for a running test.
:end

:smart_attributes_help:
This list shows the SMART attributes supported by this disk. For more information about each SMART attribute, it is recommended to search online.

Attributes in *orange* may require your attention. They have a **raw value** greater than zero and may indicate a pending disk failure.

Special attention is required when the particular attribute raw value starts to increase over time. When in doubt, consult the Limetech forum for advice.
:end

:smart_capabilities_help:
This list shows the SMART capabilities supported by this disk.

Observe here the estimated duration of the SMART short and extended self-tests.
:end

:smart_identity_help:
This list shows the SMART identity information of this disk
:end

:open_devices_help:
These are devices installed in your server but not assigned to either the parity-protected
array or the cache disk/pool.
:end

:flash_backup_help:
Use *Flash backup* to create a single zip file of the current contents of the flash device and store it locally on your computer.
:end

:syslinux_cfg_help:
Use this page to make changes to your `syslinux.cfg` file.
You will need to reboot your server for these changes to take effect.
:end

:syslinux_button_help:
Click the **Default** button to initialize the edit box with the
factory-default contents.  You still need to click **Apply** in order to
commit the change.

Click the **Apply** button to commit the current edits.  Click **Reset** to
undo any changes you make (before Saving). Click **Done** to exit this page.
:end

:info_share_assignment_help:
The selected pool is available for user shares.
:end

:info_free_space_help:
This defines a "floor" for the amount of free space remaining in the volume.
If the free space becomes less than this value, then new files written via user shares will fail with "not enough space" error.

Enter a numeric value with one of these suffixes:

**KB** = 1,000<br>
**MB** = 1,000,000<br>
**GB** = 1,000,000,000<br>
**TB** = 1,000,000,000,000<br>
**K** = 1,024 (ie, 2^10)<br>
**M** = 1,048,576 (ie, 2^20)<br>
**G** = 1,073,741,824 (ie, 2^30)<br>
**T** = 1,099,511,627,776 (ie, 2^40)<br>

If no suffix, a count of 1024-byte blocks is assumed.
:end

:share_list_help:
**Colored Status Indicator** -- the significance of the color indicator at the beginning of each line in *User Shares* is as follows:

<i class='fa fa-circle orb green-orb'></i>All files are on protected storage.

<i class='fa fa-warning orb yellow-orb'></i>Some or all files are on unprotected storage.

**Security modes:**

+ '-' -- user share is not exported and unavailable on the network
+ *Public* -- all users including guests have full read/write access (open access)
+ *Secure* -- all users including guests have read access, write access is set per user (limited access)
+ *Private* -- no guest access at all, read/write or read-only access is set per user (closed access)

**Special modes:**

+ SMB security mode displayed in *italics* indicates exported hidden user shares.
+ NFS does not have special modes for user shares.
:end

:disk_list_help:
**Colored Status Indicator** -- the significance of the color indicator at the beginning of each line in *Disk Shares* is as follows:

<i class='fa fa-circle orb green-orb'></i>Mounted, underlying device has redundancy/protection.

<i class='fa fa-warning orb yellow-orb'></i>Mounted, underlying device does not have redundancy/protection.

**Security modes:**

+ '-' -- disk share is not exported and unavailable on the network
+ *Public* -- all users including guests have full read/write access (open access)
+ *Secure* -- all users including guests have read access, write access is set per user (limited access)
+ *Private* -- no guest access at all, read/write or read-only access is set per user (closed access)

**Special modes:**

+ SMB security mode displayed in *italics* indicates exported hidden disk shares.
+ NFS does not have special modes for disk shares.
:end

:share_edit_global1_help:
A *Share*, also called a *User Share*, is simply the name of a top-level directory that exists on one or more of your
storage devices (array and cache).  Each share can be exported for network access.  When browsing a share, we return the
composite view of all files and subdirectories for which that top-level directory exists on each storage device.

*Read settings from* is used to preset the settings of the new share with the settings of an existing share.

Select the desired share name and press **Read** to copy the settings from the selected source.
:end

:share_edit_global2_help:
*Write settings to* is used to copy the settings of the current share to one or more other existing shares.

Select the desired destinations and press **Write** to copy the settings to the selected shares.
:end

:share_edit_name_help:
The share name can be up to 40 characters, and is case-sensitive with these restrictions:

* cannot contain a double-quote character (") or the following characters: / \ * < > |
* cannot be one of the reserved share names: flash, cache, cache2, .., disk1, disk2, ..

We highly recommend to make your life easier and avoid special characters.
:end

:share_edit_comments_help:
Anything you like, up to 256 characters.
:end

:share_edit_allocation_method_help:
This setting determines how Unraid OS will choose which disk to use when creating a new file or directory:

**High-water**
Choose the lowest numbered disk with free space still above the current *high water mark*.  The
*high water mark* is initialized with the size of the largest data disk divided by 2.  If no disk
has free space above the current *high water mark*, divide the *high water mark* by 2 and choose again.

The goal of **High-water** is to write as much data as possible to each disk (in order to minimize
how often disks need to be spun up), while at the same time, try to keep the same amount of free space on
each disk (in order to distribute data evenly across the array).

**Fill-up**
Choose the lowest numbered disk that still has free space above the current **Minimum free space**
setting.

**Most-free**
Choose the disk that currently has the most free space.
:end

:share_edit_free_space_help:
The *minimum free space* available to allow writing to any disk belonging to the share.<br>

Choose a value which is equal or greater than the biggest single file size you intend to copy to the share.
Include units KB, MB, GB and TB as appropriate, e.g. 10MB.
:end

:share_edit_split_level_help:
Determines whether a directory is allowed to expand onto multiple disks.

**Automatically split any directory as required**
When a new file or subdirectory needs to be created in a share, Unraid OS first chooses which disk
it should be created on, according to the configured *Allocation method*.  If the parent directory containing
the new file or subdirectory does not exist on this disk, then Unraid OS will first create all necessary
parent directories, and then create the new file or subdirectory.

**Automatically split only the top level directory as required**
When a new file or subdirectory is being created in the first level subdirectory of a share, if that first
level subdirectory does not exist on the disk being written, then the subdirectory will be created first.
If a new file or subdirectory is being created in the second or lower level subdirectory of a share, the new
file or subdirectory is created on the same disk as the new file or subdirectory's parent directory.

**Automatically split only the top "N" level directories as required**
Similar to previous: when a new file or subdirectory is being created, if the parent directory is at level "N",
and does not exist on the chosen disk, Unraid OS will first create all necessary parent directories.  If the
parent directory of the new file or subdirectory is beyond level "N", then the new file or subdirectory is
created on the same disk where the parent directory exists.

**Manual: do not automatically split directories**
When a new file or subdirectory needs to be created in a share, Unraid OS will only consider disks where the
parent directory already exists.
:end

:share_edit_included_disks_help:
Specify the disks which can be used by the share. By default all disks are included; that is, if specific
disks are not selected here, then the share may expand into *all* array disks.
:end

:share_edit_excluded_disks_help:
Specify the disks which can *not* be used by the share. By default no disks are excluded.
:end

:share_edit_cache_pool_help:
Specify whether new files and directories written on the share can be written onto the Cache disk/pool if present.
This setting also affects *mover* behavior.

**No** prohibits new files and subdirectories from being written onto the Cache disk/pool.
*Mover* will take no action so any existing files for this share that are on the cache are left there.

**Yes** indicates that all new files and subdirectories should be written to the Cache disk/pool, provided
enough free space exists on the Cache disk/pool.
If there is insufficient space on the Cache disk/pool, then new files and directories are created on the array.
When the *mover* is invoked, files and subdirectories are transferred off the Cache disk/pool and onto the array.

**Only** indicates that all new files and subdirectories must be written to the Cache disk/pool.
If there is insufficient free space on the Cache disk/pool, *create* operations will fail with *out of space* status.
*Mover* will take no action so any existing files for this share that are on the array are left there.

**Prefer** indicates that all new files and subdirectories should be written to the Cache disk/pool, provided
enough free space exists on the Cache disk/pool.
If there is insufficient space on the Cache disk/pool, then new files and directories are created on the array.
When the *mover* is invoked, files and subdirectories are transferred off the array and onto the Cache disk/pool.

**NOTE:** Mover will never move any files that are currently in use.
This means if you want to move files associated with system services such as Docker or VMs then you need to
disable these services while mover is running.
:end

:share_edit_copy_on_write_help:
Set to **No** to cause the *btrfs* NOCOW (No Copy-on-Write) attribute to be set on the share directory
when created on a device formatted with *btrfs* file system.  Once set, newly created files and
subdirectories on the device will inherit the NOCOW attribute.  We recommend this setting for shares
used to store vdisk images, including the Docker loopback image file.  This setting has no effect
on non-btrfs file systems.

Set to **Auto** for normal operation, meaning COW **will** be in effect on devices formatted with *btrfs*.
:end

:share_edit_status_help:
Share does *not* contain any data and may be deleted if not needed any longer.
:end

:share_edit_delete_help:
Share can *not* be deleted as long as it contains data. Be aware that some data can be hidden. See also [SMB Settings](/Settings/SMB) -> Hide "dot" files.
:end

:smb_security_help:
*Read settings from* is used to preset the SMB security settings of the current selected share with the settings of an existing share.

Select the desired share name and press **Read** to copy the SMB security settings from the selected source.

*Write settings to* is used to copy the SMB security settings of the current selected share to one or more other existing shares.

Select the desired destinations and press **Write** to copy the SMB security settings to the selected shares.
:end

:smb_export_help:
This setting determines whether the share is visible and/or accessible.  The 'Yes (hidden)' setting
will *hide* the share from *browsing* but is still accessible if you know the share name.
:end

:smb_time_machine_volume_help:
This limits the reported volume size, preventing Time Machine from using the entire real disk space
for backup.  For example, setting this value to "1024" would limit the reported disk space to 1GB.
:end

:smb_case_sensitive_names_help:
Controls whether filenames are case-sensitive.

The default setting of **auto** allows clients that support case sensitive filenames (Linux CIFSVFS)
to tell the Samba server on a per-packet basis that they wish to access the file system in a case-sensitive manner (to support UNIX
case sensitive semantics). No Windows system supports case-sensitive filenames so setting this option to **auto** is the same as
setting it to No for them; however, the case of filenames passed by a Windows client will be preserved.  This setting can result
in reduced performance with very large directories because Samba must do a filename search and match on passed names.

A setting of **Yes** means that files are created with the case that the client passes, and only accessible using this same case.
This will speed very large directory access, but some Windows applications may not function properly with this setting.  For
example, if "MyFile" is created but a Windows app attempts to open "MYFILE" (which is permitted in Windows), it will not be found.

A value of **Forced lower** is special: the case of all incoming client filenames, not just new filenames, will be set to lower-case.
In other words, no matter what mixed case name is created on the Windows side, it will be stored and accessed in all lower-case.  This
ensures all Windows apps will properly find any file regardless of case, but case will not be preserved in folder listings.
Note this setting should only be configured for new shares.
:end

:smb_security_modes_help:
Summary of security modes:

**Public** All users including guests have full read/write access.

**Secure** All users including guests have read access, you select which of your users have write access.

**Private** No guest access at all, you select which of your users have read/write, read-only access or no access.
:end

:smb_secure_access_help:
*Read settings from* is used to preset the SMB User Access settings of the current selected share with the settings of an existing share.

Select the desired share name and press **Read** to copy the SMB security settings from the selected source.

*Write settings to* is used to copy the SMB User Access settings of the current share to one or more other existing shares.

Select the desired destinations and press **Write** to copy the SMB User access settings to the selected shares.
:end

:smb_private_access_help:
*Read settings from* is used to preset the SMB User Access settings of the current selected share with the settings of an existing share.

Select the desired share name and press **Read** to copy the SMB security settings from the selected source.

*Write settings to* is used to copy the SMB User Access settings of the current share to one or more other existing shares.

Select the desired destinations and press **Write** to copy the SMB User access settings to the selected shares.
:end

:nfs_security_help:
*Read settings from* is used to preset the NFS security settings of the current selected share with the settings of an existing share.

Select the desired share name and press **Read** to copy the NFS security settings from the selected source.

*Write settings to* is used to copy the NFS security settings of the current selected share to one or more other existing shares.

Select the desired destinations and press **Write** to copy the NFS security settings to the selected shares.
:end

:user_add_username_help:
Usernames may be up to 40 characters long and must start with a **lower case letter** or an underscore,
followed by **lower case letters**, digits, underscores, or dashes. They can end with a dollar sign.
:end

:user_add_description_help:
Up to 64 characters. The characters ampersand (&amp;) quote (&quot;) and colon (:) are not allowed.
:end

:user_add_custom_image_help:
The image will be scaled to 48x48 pixels in size. The maximum image file upload size is 95 kB (97,280 bytes).
:end

:user_password_help:
Up to 128 characters.
:end

:user_edit_description_help:
Up to 64 characters. The characters ampersand (&amp;) quote (&quot;) and colon (:) are not allowed.
:end

:user_edit_custom_image_help:
The image will be scaled to 48x48 pixels in size. The maximum image file upload size is 512 kB (524,288 bytes).
:end

:cpu_vms_help:
This page gives a total view of the current CPU pinning assignments for VMs.<br>
It also allows to modify these assignments.

Running VMs are **stopped first** and restarted after the modification.<br>
Stopped VMs are instantly modified and new assignments become active when the VM is started.

When ***Apply*** is pressed a scan is performed to find the changes, subsequently only VMs which have changes are modified in parallel.

*Important: Please wait until all updates are finished before leaving this page*.
:end

:cpu_pinning_help:
This page gives a total view of the current CPU pinning assignments for Docker containers.<br>
It also allows to modify these assignments.

Running containers are **stopped first** and restarted after the modification.<br>
Stopped containers are instantly modified and new assignments become active when the user manually starts the container.

When ***Apply*** is pressed a scan is performed to find the changes, subsequently containers which have changes are modified in parallel.

*Important: Please wait until all updates are finished before leaving this page*.

By default NO cores are selected for a Docker container, which means it uses all available cores.<br>
Do not select **ALL** cores for containers, just select **NO** cores if you want unrestricted core use.

Do not select cores for containers which are *isolated*.
By design a container will only use a single core (the lowest numbered core) when multiple isolated cores are selected.<br>
Usually this is not what a user wants when selecting multiple cores.
:end

:cpu_isolation_help:
CPU isolation allows the user to specify CPU cores that are to be explicitly reserved for assignment (to VMs or Docker containers).

This is incredibly important for gaming VMs to run smoothly because even if you manually pin your Docker containers to not overlap with your gaming VM,
the host OS can still utilize those same cores as the guest VM needs for things like returning responses for the webGui, running a parity check, btrfs operations, etc.
:end

:timezone_help:
Select your applicable time zone from the drop-down list.
:end

:use_ntp_help:
Select 'Yes' to use Network Time Protocol to keep your server time accurate.
We **highly** recommend the use of a network time server, especially if you plan on using Active Directory.

Note: if using `pool.ntp.org` time servers, please also refer to [their documentation](http://www.pool.ntp.org/en/use.html).
:end

:ntp_server1_help:
This is the primary NTP server to use.  Enter a FQDN or an IP address.
:end

:ntp_server2_help:
This is the alternate NTP server to use if NTP Server 1 is down.
:end

:ntp_server3_help:
This is the alternate NTP Server to use if NTP Servers 1 and 2 are both down.
:end

:ntp_server4_help:
This is the alternate NTP Server to use if NTP Servers 1, 2, and 3 are all down.
:end

:current_time_help:
Enter the current time-of-day.  Use format YYYY-MM-DD HH:MM:SS. Greyed out when using NTP.
:end

:disk_enable_autostart_help:
If set to 'Yes' then if the device configuration is correct upon server start-up,
the array will be automatically Started and shares exported.<br>
If set to 'No' then you must Start the array yourself.
:end

:disk_spindown_delay_help:
This setting defines the 'default' time-out for spinning hard drives down after a period
of no I/O activity.  You may override the default value for an individual disk on the Disk Settings
page for that disk.
:end

:disk_spinup_groups_help:
If set to 'Yes' then the [Spinup Groups](/Help) feature is enabled.
:end

:disk_default_partition_format_help:
Defines the type of partition layout to create when formatting hard drives 2TB in size and
smaller **only**. (All devices larger than 2TB are always set up with GPT partition tables.)

**MBR: unaligned** setting will create MBR-style partition table, where the single
partition 1 will start in the **63rd sector** from the start of the disk.  This is the *traditional*
setting for virtually all MBR-style partition tables.

**MBR: 4K-aligned** setting will create an MBR-style partition table, where the single
partition 1 will start in the **64th sector** from the start of the disk. Since the sector size is 512 bytes,
this will *align* the start of partition 1 on a 4K-byte boundary.  This is required for proper
support of so-called *Advanced Format* drives.

Unless you have a specific requirement do not change this setting from the default **MBR: 4K-aligned**.
:end

:disk_default_file_system_help:
Defines the default file system type to create when an *unmountable* array device is formatted.

The default file system type for a single or multi-device cache is always Btrfs.
:end

:disk_shutdown_timeout_help:
When shutting down the server, this defines how long to wait in seconds for *graceful* shutdown before forcing
shutdown to continue.
:end

:disk_tunable_poll_attributes_help:
This defines the disk SMART polling interval, in seconds.  A value of 0 disables SMART polling (not recommended).
:end

:disk_tunable_enable_ncq_help:
If set to **No** then *Native Command Queuing* is disabled for all array devices that support NCQ.

**Auto** leaves the setting for each device as-is.

Note: You must reboot after selecting Auto for setting to take effect.
:end

:disk_tunable_nr_requests_help:
This defines the `nr_requests` device driver setting for all array devices.

**Auto** leaves the setting for each device as-is.

Note: if you set to blank and click Apply, the setting is restored to its default, and you must reboot for setting to take effect.
:end

:disk_tunable_scheduler_help:
Selects which kernel I/O scheduler to use for all array devices.

**Auto** leaves the setting for each device as-is (mq-deadline).

Note: You must reboot after selecting Auto for setting to take effect.
:end

:disk_tunable_md_num_stripes_help:
This is the size of the *stripe pool* in number of *stripes*.  A *stripe* refers to a data structure that facilitates parallel 4K read/write
operations necessary for a parity-protected array.

Note: if you set to blank and click Apply, the setting is restored to its default, and will take effect after reboot.
:end

:disk_tunable_md_queue_limit_help:
This is a number in [1..100] which is the maximum steady-load percentage of the stripe pool permitted to be in use.

Note: if you set to blank and click Apply, the setting is restored to its default.
:end

:disk_tunable_md_sync_limit_help:
This is a number in [0..100] which is the maximum percentage of the stripe pool allocated for parity sync/check in the presence of other I/O.

Note: if you set to blank and click Apply, the setting is restored to its default.
:end

:disk_tunable_md_write_method_help:
Selects the method to employ when writing to enabled disk in parity protected array.

*Auto* selects `read/modify/write`.
:end

:disk_default_warning_utilization_help:
*Warning disk utilization* sets the default warning threshold for all hard disks utilization. Exceeding this threshold will result in a warning notification.

When the warning threshold is set equal or greater than the critical threshold, there will be only critical notifications (warnings are not existing).

A value of zero will disable the warning threshold (including notifications).
:end

:disk_default_critical_utilization_help:
*Critical disk utilization* sets the default critical threshold for all hard disks utilization. Exceeding this threshold will result in an alert notification.

A value of zero will disable the critical threshold (including notifications).
:end

:disk_default_warning_temperature_help:
*Warning disk temperature* sets the default warning threshold for all hard disks temperature. Exceeding this threshold will result in a warning notification.

A value of zero will disable the warning threshold (including notifications).
:end

:disk_default_critical_temperature_help:
*Critical disk temperature* sets the default critical threshold for all hard disks temperature. Exceeding this threshold will result in an alert notification.

A value of zero will disable the critical threshold (including notifications).
:end

:disk_default_smart_notification_help:
SMART notifications are generated on either an increasing RAW value of the attribute, or a decreasing NORMALIZED value which reaches a predefined threshold set by the manufacturer.

This section is used to set the global settings for all disks. It is possible to adjust settings for individual disks.
:end

:disk_default_smart_tolerance_help:
A tolerance level may be given to prevent that small changes result in a notification. Setting a too high tolerance level may result in critical changes without a notification.

This section is used to set the global settings for all disks. It is possible to adjust settings for individual disks.
:end

:disk_default_smart_controller_help:
By default automatic controller selection is done by smartctl to read the SMART information. Certain controllers however need specific settings for smartctl to work.
Use this setting to select your controller type and fill-in the specific disk index and device name for your situation. Use the manufacturer's documentation to find the relevant information.

This section is used to set the global settings for all disks. It is possible to adjust settings for individual disks.
:end

:disk_default_smart_attribute_help:
The user can enable or disable notifications for the given SMART attributes. It is recommended to keep the default, which is ALL selected attributes,
when certain attributes are not present on your hard disk or do not provide the correct information, these may be excluded.
In addition custom SMART attributes can be entered to generate notifications. Be careful in this selection,
it may cause an avalance of notifcations if inappropriate SMART attributes are chosen.

This section is used to set the global settings for all disks. It is possible to adjust settings for individual disks.
:end

:docker_repositories_help:
Use this field to add template repositories.
Docker templates are used to facilitate the creation and re-creation of Docker containers.  Please setup one per line.

Using repositories is deprecated.  For instructions on how to have Community Applications utilize private repositories, visit <a href='https://forums.unraid.net/topic/57181-docker-faq/page/2/?tab=comments#comment-1018225' target='_blank'>here</a>

:end

:docker_enable_help:
Before you can start the Docker service for the first time, please specify an image file for Docker to install to.

Once started, Docker will always automatically start after the array has been started.
:end

:docker_timeout_help:
The time in seconds to allow a container to gracefully stop before forcing it to stop
:end

:docker_vdisk_type_help:
Select where to keep the Docker persistent state.

This can be an image file with a specific size or a dedicated folder.
:end

:docker_vdisk_size_help:
If the system needs to create a new docker image file, this is the default size to use specified in GB.

To resize an existing image file, specify the new size here. Next time the Docker service is started the file (and file system) will be increased to the new size (but never decreased).
:end

:docker_vdisk_location_help:
You must specify an image file for Docker. The system will automatically create this file when the Docker service is first started.

The image file name must have the extension .img, If not the input is not accepted and marked red.

It is recommended to create this image file outside the array, e.g. on the Cache pool. For best performance SSD devices are preferred.
:end

:docker_vdisk_directory_help:
You must specify a folder for Docker. The system will automatically create this folder when the Docker service is first started.

It is recommended to create this folder under a share which resides on the Cache pool (setting: cache=Only). For best performance SSD devices are preferred.
:end

:docker_appdata_location_help:
You can specify a folder to automatically generate and store subfolders containing configuration files for each Docker app (via the /config mapped volume).

The folder's path must end with a trailing slash (/) character. If not the input is not accepted and marked red.

It is recommended to create this folder outside the array, e.g. on the Cache pool. For best performance SSD devices are preferred.

Only used when adding new Docker apps. Editing existing Docker apps will not be affected by this setting.
:end

:docker_log_rotation_help:
By default LOG rotation is disabled and will create a single LOG file of unlimited size.

Enable LOG rotation to limit the size of the LOG file and specify the number of files to keep in the rotation scheme.
:end

:docker_log_file_size_help:
Specifies the maximum LOG size. When exceeded LOG rotation will occur.
:end

:docker_log_file_number_help:
Specifies the number of LOG files when LOG rotation is done.
:end

:docker_authoring_mode_help:
If set to **Yes**, when creating/editing containers the interface will be present with some extra fields related to template authoring.
:end

:docker_custom_network_access_help:
Allows direct communication between the host and containers using a custom (macvlan) network.<br>
By default this is prohibited.
:end

:docker_user_defined_network_help:
User created networks are networks created by the user outside of the GUI.<br>
By default user created networks are removed from Docker. This is done to prevent potential conflicts with the automatic generation of custom networks.

Change this setting to preserve user defined networks, but it is the responsibility of the user to ensure these entries work correctly and are conflict free.
:end

:docker_include_interface_vlan_ipv4_help:
Include (default) or exclude the above interfaces or VLANs as custom network for Docker.

Enter the pool range within each allocated subnet which is used for DHCPv4 assignments by Docker. E.g. 192.168.1.128/25
:end

:docker_exclude_interface_vlan_ipv4_help:
Include or exclude (default) the above interfaces or VLANs as custom network for Docker.

Enter the pool range within each allocated subnet which is used for DHCPv4 assignments by Docker. E.g. 192.168.1.128/25
:end

:docker_include_interface_vlan_ipv6_help:
Include (default) or exclude the above interfaces or VLANs as custom network for Docker.

Enter the pool range within each allocated subnet which is used for DHCPv6 assignments by Docker. E.g. 2a02:abcd:9ef5:100:1::/72
:end

:docker_exclude_interface_vlan_ipv6_help:
Include or exclude (default) the above interfaces or VLANs as custom network for Docker.

Enter the pool range within each allocated subnet which is used for DHCPv6 assignments by Docker. E.g. 2a02:abcd:9ef5:100:1::/72
:end

:docker_version_help:
This is the active Docker version.
:end

:docker_vdisk_location_active_help:
This is the location of the Docker image.
:end

:docker_appdata_location_active_help:
This is the storage location for Docker containers.
:end

:docker_log_rotation_active_help:
By default a single unlimited LOG file is created. Otherwise LOG file size and number of files are limited when LOG rotation is enabled.
:end

:docker_custom_network_active_help:
Allows direct communication between the host and containers using a custom (macvlan) network.<br>
By default this is prohibited.
:end

:docker_user_defined_network_active_help:
Shows whether networks created outside of the GUI are removed or preserved for Docker. When preserved *user defined networks* become available in the *Network type* dropdown list of containers.
:end

:docker_scrub_help:
**Scrub** runs the *btrfs scrub* program to check file system integrity.

If repair is needed you should check the *Correct file system errors* and run a second Scrub pass; this will permit *btrfs scrub* to fix the file system.
:end

:docker_cancel_help:
**Cancel** will cancel the Scrub operation in progress.
:end

:id_server_name_help:
The network identity of your server.  Also known as *hostname* or *short hostname*. Windows networking
refers to this as the *NetBIOS name* and must be 15 characters or less in length.
Use only alphanumeric characters (that is, "A-Z", "a-z", and "0-9"), dashes ("-"), and dots (".");
and, the first and last characters must be alphanumeric.
:end

:id_description_help:
This is a text field that is seen next to a server when listed within Network or File Explorer
(Windows), or Finder (macOS).
:end

:id_model_help:
This is the server model number.
:end

:mgmt_start_page_help:
Select the page which is opened first when entering the GUI. By default the *Main* page is selected.
:end

:mgmt_use_telnet_help:
By default TELNET access is enabled. TELNET is an insecure type of CLI access however,
and it is highly recommended to use SSH access instead and disable TELNET access.
:end

:mgmt_telnet_port_help:
Enter the TELNET port, default port is 23.
:end

:mgmt_use_ssh_help:
SSH is enabled by default and offers a secure way of CLI access. Upon system startup SSH keys are automatically generated
if not yet existing, and stored on the flash device in the folder */config/ssh*.
:end

:mgmt_ssh_port_help:
Enter the SSH port, default port is 22.
:end

:mgmt_use_upnp_help:
Enable (default) or disable the UPnP function on the server. This function allows automatic forwarding of ports on the router, only applicable when UPnP is enabled on the router itself.
:end

:mgmt_use_ssl_tls_help:
Determines how the webGUI responds to HTTP and/or HTTPS protocol on your LAN.

Select **No** to disable HTTPS.

Select **Yes** to enable HTTPS and redirect HTTP to HTTPS. A
self-signed SSL certificate will be generated automatically.

Select **Auto** if you have *Provisioned* a Let's Encrypt SSL
certificate.  In this case webGUI access will use HTTPS with the Let's Encrypt
certificate exclusively.  Note that a DNS sever must also be reachable.

Important: **Auto** may not be selectable if your router or upstream DNS server has
[DNS rebinding protection](https://en.wikipedia.org/wiki/DNS_rebinding) enabled. DNS rebinding
protection prevents DNS from resolving a private IP network range. DNS rebinding protection is meant as
a security feature on a LAN that may include legacy devices with buggy/insecure "web" interfaces.

One source of DNS rebinding protection could be your ISP DNS server. In this case the problem may be solved by
switching to a different DNS server such as OpenDNS where DNS rebinding proection can be turned off.

More commonly, DNS rebinding protection could be enabled in your router. Most consumer routers do not implement DNS
rebinding protection; but, if they do, a configuration setting should be available to turn it off.

Higher end routers usually do enable DNS rebinding protection. Typically there are ways of turning it off
entirely or selectively based on domain. Examples:

**DD-WRT:** If you are using "dnsmasq" with DNS rebinding protection enabled, you can add this line to your router
configuration file:

`rebind-domain-ok=/unraid.net/`

**pfSense:** If you are using pfSense internal DNS resolver service, you can add these Custom Option lines:

`server:`<br>
`private-domain: "unraid.net"`

**Ubiquiti USG router:** you can add this configuration line:

`set service dns forwarding options rebind-domain-ok=/unraid.net/`

**OpenDNS:** Go to Settings -> Security and *remove* the checkbox next to
 "Suspicious Responses - Block internal IP addresses". It is an all-or-nothing setting.

When all else fails, you may be able create an entry in your PC's *hosts* file to override external DNS and
directly resolve your servers unraid.net FQDN to its local IP address.
:end

:mgmt_http_port_help:
Enter the HTTP port, default port is 80.
:end

:mgmt_https_port_help:
Enter the HTTPS port, default port is 443.
:end

:mgmt_local_tld_help:
Enter your local Top Level Domain. May be blank.
:end

:mgmt_certificate_expiration_help:
**Provision** may be used to install a *free* SSL Certficiate from
[Let's Encrypt](https://letsencrypt.org/).

After a Let's Encrypt SSL Certificate has been installed, two
background services are activated:

- *updatedns* - This starts 30 seconds after server reboot has completed and contacts the Lime Technology
DNS service to register the servers local IP address. Thereafter it wakes up every 10 minutes in case
the local IP address has changed.

- *renewcert* - This starts 60 seconds after server reboot has completed and contacts the Lime Technology
certificate renewal service to determine if your Let's Encrypt SSL certificate needs to be renewed.
Thereafter it wakes up every 24 hours. If within 30 days of expiration, a new certificate is automatically
provisioned and downloaded to your server.

**Delete** may be used to delete the Let's Encrypt certificate file.

**Update DNS** may be used to manually initiate updating the DNS A-record of your server FQDN on unraid.net. Note
that world-wide DNS propagation could take anywhere from 1 minute to several hours (we set TTL to 60 seconds). For
this reason, we also recommend assigning a static IP address to the server on your LAN.

**nginx certificate handling details**

nginx makes use of two certificate files stored on the USB flash boot device:<br>

- a self-signed certificate: `config/ssl/certs/<server-name>_unraid_bundle.pem`

- a Let's Encrypt certificate: `config/ssl/certs/certificate_bundle.pem`

The self-signed SSL certificate file is automatically created when nginx
starts; and re-created if the server hostname or local TLD is changed.

**nginx stapling support**

Whether nginx enables OCSP Staping is determined by which certificate is in use:<br>
`config/ssl/certs/certificate_bundle.pem` => Yes<br>
`config/ssl/certs/<server-name>_unraid_bundle.pem` => No
:end

:ftp_server_help:
Enable or disable the FTP server daemon. By default the FTP server is enabled.
This setting is not saved, i.e. upon system reboot it will revert to its default setting.
:end

:ftp_users_help:
Enter the user names (separated by spaces) permitted to access the server using FTP.
To disallow any user access, clear this setting.

**Note:** do not enter user name `root` since this may cause problems in the future.
:end

:ftp_overview_help:
### Overview

Unraid includes the popular `vsftpd` FTP server.  The configuration of `vsftp` is currently very
simple: **All** user names entered above are permitted to access the server via FTP and will have
*full read/write/delete access* to the entire server, so use with caution.
:end

:smb_enable_help:
Select 'Yes (Workgroup)' to enable SMB (Windows Networking) protocol support. This
also enables Windows host discovery.

Select 'Yes (Active Directory)' to enable Active Directory integration.
:end

:smb_hide_files_help:
If set to 'Yes' then files starting with a '.' (dot) will appear as *hidden files* and normally
will not appear in Windows folder lists unless you have "Show hidden files, folders, and drives" enabled
in Windows Folder Options.

If set to 'No' then dot files will appear in folder lists the same as any other file.
:end

:smb_enhanced_macos_help:
When set to 'Yes' provides enhanced compatibility with Apple SMB clients, resulting, for example, in faster
Finder browsing, and ability to export Time Machine shares.  This may cause some issues with Windows clients, however.
Please also refer to the [VFS_FRUIT MAN PAGE](https://www.mankier.com/8/vfs_fruit).
:end

:smb_enable_netbios_help:
Select 'Yes' to enable NetBIOS.  If enabled, SMBv1 protocol will also be recognized.  If disabled,
clients must use SMBv2 or higher.
:end

:smb_enable_wsd_help:
Select 'Yes' to enable WSD (WS-Discovery).  The only reason to turn this off is when you are running an
old LAN setup based on SMBv1.
:end

:smb_wsd_options_help:
This is a command line options string passed to the WSD daemon upon startup. Leave this field blank unless
instructed by support to put something here.
:end

:smb_extra_conf_help:
Use this page to make changes to your `smb-extra.conf` file.  Samba will need
to be restarted in order for changes to take effect.
:end

:smb_extra_button_help:
Click the **Apply** button to commit the current edits.  Click **Reset** to
undo any changes you make (before Saving). Click **Done** to exit this page.
:end

:smb_workgroup_help:
Enter your local network Workgroup name. Usually this is "WORKGROUP".
:end

:smb_local_master_help:
If set to 'Yes' then the server will fully participate in browser elections, and in the absence
of other servers, will usually become the local Master Browser.
:end

:nfs_enable_help:
Select 'Yes' to enable the NFS protocol.
:end

:nfs_tunable_fuse_remember_help:
When NFS is enabled, this Tunable may be used to alleviate or solve instances of "NFS Stale File Handles"
you might encounter with your NFS client.

In essence, (fuse_remember) tells an internal subsystem (named "fuse") how long to "remember" or "cache"
file and directory information associated with user shares.  When an NFS client attempts to access a file
(or directory) on the server, and that file (or directory) name is not cached, then you could encounter
"stale file handle".

The numeric value of this tunable is the number of seconds to cache file/directory name entries,
where the default value of 330 indicates 5 1/2 minutes.  There are two special values you may also set
this to:

* 0 which means, do not cache file/directory names at all, and
* -1 which means cache file/directory names forever (or until array is stopped)

A value of 0 would be appropriate if you are enabling NFS but only plan to use it for disk shares,
not user shares.

A value of -1 would be appropriate if no other timeout seems to solve the "stale file handle" on
your client.  Be aware that setting a value of -1 will cause the memory footprint to grow by approximately
108 bytes per file/directory name cached.  Depending how much RAM is installed in your server and how many
files/directories you access via NFS this may or may not lead to out-of-memory conditions.
:end

:shares_enable_disk_help:
If set to No, disk shares are unconditionally not exported.

If set to Yes, disk shares may be exported.  **WARNING:** Do not copy data from a disk share to a user share
unless you *know* what you are doing.  This may result in the loss of data and is not supported.

If set to Auto, only disk shares not participating in User Shares may be exported.
:end

:shares_enable_shares_help:
If set to 'Yes' the User Shares feature is activated.
:end

:shares_included_disks_help:
This setting defines the set of array disks which are *included* in User Shares.
Unchecking all disks will allow **all** array disks to be included.
:end

:shares_excluded_disks_help:
This setting defines the set of array disk which are *excluded* from User Shares.
Uncheck all disks in order to not exclude any disks

**Note:** Each separate User Share also includes its own set of Included and Excluded
disks which represent a subset of the Included/Excluded disks defined here.
:end

:shares_tunable_hard_links_help:
If set to Yes then support the link() operation.

If set to No then hard links are not supported.

Notes:

* Setting to Yes may cause problems for older media and dvd/bluray players accessing shares using NFS.
* No matter how this is set, the **mover** will still properly handle any detected hard links.
:end

:shares_tunable_direct_io_help:
**Experimental**: If set to Yes then mount User Share file system with FUSE *direct_io* mount option.
This will increase write performance but might possibly decrease read performance.

*Auto* selects No.
:end

:syslog_local_server_help:
Let the server act as a central syslog server and collect syslog messages from other systems.
The server can listen on UDP, TCP or both with a selectable port number.

Syslog information is stored per IP address. That is every system gets its own syslog file.
:end

:syslog_local_folder_help:
Select the share folder where the syslogs will be stored.
It is recommended that you use a share located on the cache drive to prevent array disk spinups.
:end

:syslog_local_rotation_help:
By default LOG rotation is disabled and will create a single LOG file of unlimited size.

Enable LOG rotation to limit the size of the LOG file and specify the number of files to keep in the rotation scheme.
:end

:syslog_local_file_size_help:
Specifies the maximum LOG size. When exceeded LOG rotation will occur.
:end

:syslog_local_file_number_help:
Specifies the number of additional LOG files to keep in the rotation scheme.
:end

:syslog_remote_server_help:
Enter a name or IP address of a remote syslog server.
This will send a copy of the syslog messages to the designated server.
:end

:syslog_mirror_flash_help:
This setting is NO by default and must be used with care to avoid unnecessary wear and tear of the USB device.

Change this setting to YES when troubleshooting is required and it is not possible to get the regular diagnostics information.
A mirror of the syslog file is stored in the **logs** folder of the flash device.
:end

:confirm_reboot_help:
Choose if rebooting or powering down the server needs a confirmation checkbox.
:end

:confirm_array_stop_help:
Choose if stopping the array needs a confirmation checkbox.
:end

:display_settings_help:
The display settings below determine how items are displayed on screen. Use these settings to tweak the visual effects to your likings.

You can experiment with these settings as desired, they only affect visual properties.
:end

:display_font_size_help:
This is a per device setting
:end

:display_wwn_device_id_help:
World Wide Name (WWN) is a unique identifier used for SAS attached devices.

Select *Disabled* to suppress the appending of WWN to the device identification

Select "Automatic" to append WWN to the device identification in case of SAS devices
:end

:display_custom_text_color_help:
Overrule the default text color in the header. This can be used to match the text color with a background image.
:end

:display_custom_background_color_help:
Overrule the default background color in the header. This can be used to match the background color with a custom text color.
:end

:display_custom_banner_help:
Image will be scaled to 1920x90 pixels. The maximum image file upload size is 512 kB (524,288 bytes).
:end

:display_temperature_unit_help:
Selects the temperature unit for the disk temperature thresholds. Changing the unit will adjust the existing value in the disk temperature thresholds as appropriate.

Make sure any newly entered values represent the selected temperature unit.
:end

:vms_enable_help:
Stopping the VM Manager will first attempt to shutdown all running VMs. After 60 seconds, any remaining VM instances will be terminated.
:end

:vms_libvirt_volume_help:
This is the libvirt volume.
:end

:vms_libvirt_vdisk_size_help:
If the system needs to create a new libvirt image file, this is the default size to use specified in GB.
To resize an existing image file, specify the new size here. Next time the Libvirt service is started the file (and file system) will be increased to the new size (but never decreased).
:end

:vms_libvirt_location_help:
You must specify an image file for Libvirt. The system will automatically create this file when the Libvirt service is first started.
:end

:vms_libvirt_storage_help:
Specify a user share that contains all your VM subdirectories with vdisks
:end

:vms_libvirt_iso_storage_help:
Specify a user share that contains all your installation media for operating systems
:end

:vms_virtio_driver_help:
Specify the virtual CD-ROM (ISO) that contains the VirtIO Windows drivers as provided by the Fedora Project.
Download the latest ISO from here: <a href="https://docs.fedoraproject.org/en-US/quick-docs/creating-windows-virtual-machines-using-virtio-drivers/index.html#virtio-win-direct-downloads" target="_blank">fedoraproject.org</a>

When installing Windows, you will reach a step where no disk devices will be found. There is an option to browse for drivers on that screen.
Click browse and locate the additional CD-ROM in the menu. Inside there will be various folders for the different versions of Windows.
Open the folder for the version of Windows you are installing and then select the AMD64 subfolder inside (even if you are on an Intel system, select AMD64).
Three drivers will be found. Select them all, click next, and the vDisks you have assigned will appear.
:end

:vms_network_bridge_help:
Select the name of the network bridge you wish to use as default for your VMs,
the setting 'virbr0' will let libvirt create a virtual bridge that utilizes NAT (network address translation)
and act as a DHCP server to hand out IP addresses to virtual machines directly.
More optional selections are present when virtual bridges are created under network settings.

NOTE: You can also specify a network bridge on a per-VM basis.
:end

:vms_host_shutdown_help:
When shutting down the server, this defines the action to take upon running VMs. If *Hibernate VMs* is chosen,
the VM will be instructed to hibernate (if supported) otherwise it will attempt a VM shutdown.
:end

:vms_shutdown_timeout_help:
When shutting down the server, this defines how long to wait in seconds for *graceful* VM shutdown before forcing shutdown to continue.
NOTE: It's recommended to shut down guest VMs from within the VM.
:end

:vms_acs_override_help:
*PCIe ACS override* allows various hardware components to expose themselves as isolated devices.
Typically it is sufficient to isolate *Downstream* ports.
A hardware component may need the setting *Multi-function* or *Both* to further isolate different hardware functions.<br>
A reboot is required for changes to this setting to take affect.

**Warning: use of this setting could cause possible data corruption with certain hardware configurations.**
Please visit the [Lime Technology forums](https://forums.unraid.net/forum/51-vm-engine-kvm) for more information.
:end

:vms_vfio_interupts_help:
If your system doesn't support interrupt remapping, these can be enabled by allowing unsafe interrupts.<br>
A reboot will be required for changes to this setting to take affect.

**Warning: use of this setting could cause possible data corruption with certain hardware configurations.**
Please visit the [Lime Technology forums](https://forums.unraid.net/forum/51-vm-engine-kvm) for more information.
:end

:vms_libvirt_log_help:
View the log for libvirt: <a id="openlog" title="/var/log/libvirt/libvirtd.log" href="#" onclick="openWindow('/webGui/scripts/tail_log&arg1=libvirt/libvirtd.log','_(Libvirt Log)_',600,900);">/var/log/libvirt/libvirtd.log</a>
:end

:vms_scrub_help:
**Scrub** runs the *btrfs scrub* program to check file system integrity.
If repair is needed you should check the *Correct file system errors* and run a second Scrub pass; this will permit *btrfs scrub* to fix the file system.
:end

:vms_cancel_help:
**Cancel* will cancel the Scrub operation in progress.
:end

:eth_interface_description_help:
Use this optional field to provide additional information about the purpose of the connection.
:end

:eth_mac_address_help:
This is the hardware address of the interface.
When tagging is enabled all VLANs on this interface will share the same hardware address.
:end

:eth_enable_bonding_help:
Bonding is a feature that combines multiple physical Ethernet interfaces into a single *bonded* interface named **bond0**.
This can be used to improve the connection redundancy and/or throughput of the system.
Different bonding modes are supported (see below), but some modes require proper switch support.
:end

:eth_bonding_mode_help:
**Mode 0 (balance-rr)**<br>
This mode transmits packets in a sequential order from the first available slave through the last.
If two real interfaces are slaves in the bond and two packets arrive destined out of the bonded interface the first will be transmitted on the first slave and the second frame will be transmitted on the second slave.
The third packet will be sent on the first and so on. This provides load balancing and fault tolerance.

**Mode 1 (active-backup) - default**<br>
This mode places one of the interfaces into a backup state and will only make it active if the link is lost by the active interface.
Only one slave in the bond is active at an instance of time. A different slave becomes active only when the active slave fails.
This mode provides fault tolerance.

**Mode 2 (balance-xor)**<br>
This mode transmits packets based on an XOR formula. Source MAC address is XOR'd with destination MAC address modula slave count.
This selects the same slave for each destination MAC address and provides load balancing and fault tolerance.

**Mode 3 (broadcast)**<br>
This mode transmits everything on all slave interfaces. This mode is least used (only for specific purpose) and provides only fault tolerance.

**Mode 4 (802.3ad)**<br>
This mode is known as *Dynamic Link Aggregation*. It creates aggregation groups that share the same speed and duplex settings.
It requires a switch that supports IEEE 802.3ad dynamic link.
Slave selection for outgoing traffic is done according to the transmit hash policy, which may be changed from the default simple XOR policy via the xmit_hash_policy option.
Note that not all transmit policies may be 802.3ad compliant, particularly in regards to the packet mis-ordering requirements of section 43.2.4 of the 802.3ad standard.
Different peer implementations will have varying tolerances for noncompliance.

**Mode 5 (balance-tlb)**<br>
This mode is called *Adaptive transmit load balancing*. The outgoing traffic is distributed according to the current load and queue on each slave interface.
Incoming traffic is received by the current slave.

**Mode 6 (balance-alb)**<br>
This mode is called *Adaptive load balancing*. This includes balance-tlb + receive load balancing (rlb) for IPV4 traffic.
The receive load balancing is achieved by ARP negotiation.
The bonding driver intercepts the ARP Replies sent by the server on their way out and overwrites the src hw address with the unique hw address of one of the slaves in the bond
such that different clients use different hw addresses for the server.

*Mode 1 (active-backup) is the recommended setting. Other modes allow you to set up a specific environment, but may require proper switch support.
Choosing a unsupported mode can result in a disrupted communication.*
:end

:eth_bonding_members_help:
Select which interfaces are member of the *bonded* interface. By default eth0 is a member, while other interfaces are optional.
:end

:eth_enable_bridging_help:
Bridging is a feature which creates a virtual bridge and allows VMs and Docker containers to communicate directly with the physical Ethernet port.
Both bonding and bridging can be combined to let VMs or containers communicate over a *bonded* interface.
:end

:eth_bridging_members_help:
Select which interfaces are member of the *bridged* interface. By default eth0 is a member, while other interfaces are optional.
:end

:eth_network_protocol_help:
Select which protocol(s) are used. By default IPv4 only is used.<br>
When both IPv4 and IPv6 is selected, each protocol can be configured independently.
:end

:eth_ipv4_address_assignment_help:
The following settings are possible:

*Automatic* - the server will attempt to obtain a IPv4 address from the local DHCP server<br>
*Static* - the IPv4 address is manually set for this interface<br>
*None* - no IPv4 address is assigned to the interface (only available for VLANs)
:end

:eth_ipv4_address_help:
Greyed out when using automatic IP assignment. Otherwise specify here the IPv4 address and mask of the system.
:end

:eth_ipv4_default_gateway_help:
Greyed out when using automatic IP assignment. Otherwise specify here the IPv4 address of your router.
:end

:eth_ipv4_dns_server_assignment_help:
If set to *Automatic* the server will use IPv4 DNS server(s) returned by the local automatic assignment.<br>
If set to *Static* you may enter your own list.

This is useful in Active Directory configurations where you need to set the first DNS Server entry to the IP address of your AD Domain server.
:end

:eth_ipv4_dns_server_help:
This is the primary IPv4 DNS server to use. Enter a IPv4 address.

Note: for *Active Directory* you **must** ensure this is set to the IP address of your AD Domain server.
:end

:eth_ipv4_dns_server2_help:
This is the IPv4 DNS server to use when IPv4 DNS server 1 is down.
:end

:eth_ipv4_dns_server3_help:
This is the IPv4 DNS server to use when IPv4 DNS servers 1 and 2 are both down.
:end

:eth_ipv6_address_assignment_help:
The following settings are possible:

*Automatic* - the server will attempt to obtain a IPv6 address from the local DHCP server or Router Advertisement (RA)<br>
*Static* - the IPv6 address is manually set for this interface<br>
*None* - no IPv6 address is assigned to the interface (only available for VLANs)
:end

:eth_ipv6_address_help:
Greyed out when using automatic IP assignment. Otherwise specify here the IPv6 address of the system.
:end

:eth_ipv6_default_gateway_help:
Greyed out when using automatic IP assignment. Otherwise specify here the IPv6 address of your router.
:end

:eth_ipv6_privacy_extensions_help:
Enable or disable the generation of a random IPv6 interface identifier according to RFC4941. This is similar to the temporary IPv6 address generation on Windows machines.
:end

:eth_ipv6_dns_server_assignment_help:
If set to *Automatic* the server will use IPv6 DNS server(s) returned by the local automatic assignment.<br>
If set to *Static* you may enter your own list.
:end

:eth_ipv6_dns_server_help:
This is the primary IPv6 DNS server to use. Enter a IPv6 address.
:end

:eth_ipv6_dns_server2_help:
This is the IPv6 DNS server to use when IPv6 DNS server 1 is down.
:end

:eth_ipv6_dns_server3_help:
This is the IPv6 DNS server to use when IPv6 DNS servers 1 and 2 are both down.
:end

:eth_desired_mtu_help:
This is the MTU size to use on the physical Ethernet interface.
If left blank, the MTU will automatically be determined (by default 1500 bytes).
:end

:eth_enable_vlans_help:
By default no VLANs are configured.<br>
Enabling VLANs extends the number of logical connections over the same physical connection.

Note: your router and switch must support VLANs too when this feature is used.
:end

:eth_vlan_number_help:
Give each VLAN a unique identifier. Numbers range from 1 to 4095.
:end

:eth_network_rules_help:
The interface assignment rules can be changed here and might be necessary to set the preferred interface for managing Unraid - *use with care, usually there is no need to change*.

**eth0** is the main interface used to manage the Unraid system. The other interfaces are optional and may be used as desired.
Every interface must be uniquely identified by its MAC (hardware) address.

The interface assignment is stored on the flash device under */config/network-rules.cfg*. This file can be viewed with any editor, but it is recommended to make changes via the webGUI only.<br>
Deleting the file *network-rules.cfg* from the flash device will restore automatic interface assignment after a system reboot.
:end

:eth_routing_table_help:
Enter a valid IPv4 route in the format *nnn.nnn.nnn.nnn/xx*, e.g. *192.168.1.0/24*<br>
or enter a valid IPv6 route in the format *nnnn:nnnn:nnnn::nnnn/xxx*, e.g. *fe80::3ad8:2fff:fe25:9709/64*

Select the gateway from the dropdown list or enter a valid IPv4/IPv6 address as gateway value.

The metric value is optional, it defaults to 1. Use it to select the preferred gateway when more than one entry of the same route exists.
:end

:apc_ups_daemon_help:
Set to 'Yes' to enable apcupsd and start the daemon, set to 'No' to disable apcupsd and stop the daemon.
:end

:apc_ups_cable_help:
Defines the type of cable connecting the UPS to your computer.Possible generic choices for 'cable' are:

+ USB, Simple, Smart, Ether, or Custom to specify a special cable.
:end

:apc_ups_custom_cable_help:
Specify a special cable by model number, only applicable when *UPS cable* is set to Custom.

+ 940-0119A, 940-0127A, 940-0128A, 940-0020B
+ 940-0020C, 940-0023A, 940-0024B, 940-0024C
+ 940-1524C, 940-0024G, 940-0095A, 940-0095B
+ 940-0095C, 940-0625A, M-04-02-2000
:end

:apc_ups_type_help:
Define a *UPS type*, which corresponds to the type of UPS you have (see the Description for more details).

+ **USB** - most new UPSes are USB
+ **APCsmart** - newer serial character device, appropriate for SmartUPS models using a serial cable (not USB)
+ **Net** - network link to a master apcupsd through apcupsd's Network Information Server. This is used if the UPS powering your computer is connected to a different computer for monitoring
+ **SNMP** - SNMP network link to an SNMP-enabled UPS device
+ **Dumb** - old serial character device for use with simple-signaling UPSes
+ **PCnet** - PowerChute Network Shutdown protocol which can be used as an alternative to SNMP with the AP9617 family of smart slot cards
+ **ModBus** - serial device for use with newest SmartUPS models supporting the MODBUS protocol
:end

:apc_ups_device_help:
Enter the *device* which corresponds to your situation, only applicable when *UPS type* is not set to USB.

+ **apcsmart** - /dev/tty**
+ **net** - hostname:port. Hostname is the IP address of the NIS server. The default port is 3551
+ **snmp** - hostname:port:vendor:community. Hostname is the ip address or hostname of the UPS on the network. Vendor can be can be "APC" or "APC_NOTRAP". "APC_NOTRAP" will disable SNMP trap catching; you usually want "APC". Port is usually 161. Community is usually "private"
+ **dumb** - /dev/tty**
+ **pcnet** - ipaddr:username:passphrase:port. ipaddr is the IP address of the UPS management card. username and passphrase are the credentials for which the card has been configured. port is the port number on which to listen for messages from the UPS, normally 3052. If this parameter is empty or missing, the default of 3052 will be used
+ **modbus** - /dev/tty**
:end

:apc_battery_level_help:
If during a power failure, the remaining battery percentage (as reported by the UPS) is below or equal to *Battery level*, apcupsd will initiate a system shutdown.
:end

:apc_runtime_left_help:
If during a power failure, the remaining runtime in minutes (as calculated internally by the UPS) is below or equal to this field, apcupsd, will initiate a system shutdown.
:end

:apc_battery_time_help:
If during a power failure, the UPS has run on batteries for *time-out* many seconds or longer; apcupsd will initiate a system shutdown. A value of zero disables this timer.

If you have a Smart UPS, you will most likely want to disable this timer by setting it to zero.
That way, your UPS will continue on batteries until either the % charge remaining drops to or below *Battery level* or the remaining battery runtime drops to or below *minutes*.

Of course - when testing - setting this to 60 causes a quick system shutdown if you pull the power plug.
If you have an older dumb UPS, you will want to set this to less than the time you know you can run on batteries.
:end

:apc_note_help:
**Note:** *Battery level*, *Runtime left*, and *Time on battery* work in conjunction, so the first that occurs will cause the initiation of a shutdown.
:end

:apc_killups_help:
Set to *Yes* to turn off the power to the UPS after a shutdown.
:end

:parity_check_scheduled_help:
By default no parity check is scheduled. Select here the desired schedule. This can be one of the preset schedules for daily, weekly, monthly, yearly or a custom schedule.
:end

:parity_day_of_the_week_help:
When a **weekly** or **custom** schedule is selected then choose here the preferred *day of the week*, in the other schedules this setting is not used and unavailable.
:end

:parity_week_of_the_month_help:
When a **monthly** or **yearly** schedule is selected then choose here the preferred *day of the month*.
When a **custom** schedule is selected then choose here the preferred *week of the month*, in the other schedules this setting is not used and unavailable.
:end

:parity_time_of_the_day_help:
Choose the desired *time of the day* to start the schedule. Time granularity is given in half hour periods.
:end

:parity_month_of_the_year_help:
When a **yearly** or **custom** schedule is selected then choose here the preferred *month of the year*, in the other schedules this setting is not used and unavailable.
:end

:parity_write_corrections_help:
Choose here whether any parity errors found during the check, need to be corrected on the parity disk or not.
:end

:mover_schedule_help:
Choose a mover schedule ranging from hourly, daily, weekly and monthly.

The interval determines how fast the mover will activated, it runs in the background.
:end

:mover_day_of_the_week_help:
Choose a day when the weekly schedule is selected. Otherwise disabled.
:end

:mover_day_of_the_month_help:
Choose a date when the monthly schedule is selected. Otherwise disabled.
:end

:mover_time_of_the_day_help:
When an hourly schedule is selected this will set the interval in hours. An interval always starts on the whole hour (minute 0).

For the other schedules choose here the time of the day the mover should start.
:end

:mover_logging_help:
Write mover messages to the syslog file.
:end

:notifications_display_help:
In *Detailed* view all notifications will be displayed on screen as soon as they arrive.<br>
Notifications can be acknowledged individually or all in once.

In *Summarized* view notifications will be counted only and the number of unread notifications is shown in the menu header per category.<br>
Click on the counters to either acknowledge or view the unread notifications.
:end

:notifications_date_format_help:
Select the desired date format which is used in the notifications archive. Recommended is YYYY-MM-DD, which makes the date/time column sortable in a sensible way.
:end

:notifications_time_format_help:
Select the desired time format which is used in the notifications archive. Recommended is 24 hours, which makes the date/time column sortable in a sensible way.
:end

:notifications_display_position_help:
Choose the position of where notifications appear on screen. Multiple notifications are stacked, bottom-to-top or top-to-bottom depending on the selected placement.
:end

:notifications_store_flash_help:
By default notifications are stored on RAM disk, which will get lost upon system reboot.
Notifications may be stored permanently on the flash drive under folder '/boot/config/plugins/dynamix' instead.
:end

:notifications_system_help:
By default the notifications system is disabled. Enable it here to start receiving notifications.
The following sections give more options about which and what type of notifications will be sent.
:end

:notifications_os_update_help:
Start a periodic verification and notify the user when a new version of the Unraid OS system is detected.
Use the checkboxes below to select how notifications need to be given; by browser, by email and/or by custom agent.
:end

:notifications_plugins_update_help:
Start a periodic verification and notify the user when a new version of one or more of the installed plugins is detected.
Use the checkboxes below to select how notifications need to be given; by browser, by email and/or by custom agent.
:end

:notifications_docker_update_help:
Start a periodic verification and notify the user when a new version of one or more of the installed dockers is detected.
Use the checkboxes below to select how notifications need to be given; by browser, by email and/or by custom agent.
:end

:notifications_array_status_help:
Start a periodic array health check (preventive maintenance) and notify the user the result of this check.
:end

:notifications_agent_selection_help:
Use the checkboxes above to select what and how notifications need to be given; by browser, by email and/or by a service.<br>
<b>Tip:</b> you can use custom notification agents; just add them to "/boot/config/plugins/dynamix/notification/agents" directory and check 'Agents'.
:end

:notifications_classification_help:
Notifications are classified as:

*notice* - these are informative notifications and do not indicate a problem situation, e.g. a new version is available<br>
*warning* - these are attentive notifications and may indicate future problems, e.g. a hard disk is hotter than usual<br>
*alert* - these are serious notifications and require immediate attention, e.g. a failing hard disk<br>

Choose for each classification how you want to be notified.
:end

:smtp_preset_service_help:
Select a preset service to set the basic service settings.
:end

:smtp_email_address_help:
Email address of your mail account. This address is used as sender of the notifications.
:end

:smtp_recipients_help:
Recipients of status and error notifications. Specify one or more email addresses, separate multiple email addresses with a space.
:end

:smtp_priority_help:
Set email header with high importance, when there is a problem with unRaid.
:end

:smtp_subject_prefix_help:
Set a prefix for easy recognition of Unraid messages.
:end

:smtp_mail_server_help:
Specify the name of the email server. Use the preset service selection to have this filled-in automatically.
:end

:smtp_mail_server_port_help:
Specify the port of the email server. Use the preset service selection to have this filled-in automatically.
:end

:smtp_use_ssl_tls_help:
Specifies whether to use SSL/TLS to talk to the SMTP server.
:end

:smtp_use_starttls_help:
Specifies whether to use STARTTLS before starting SSL negotiation - See RFC 2487.
:end

:smtp_define_tls_cert_help:
Select only when you have a certificate which required for communication.
:end

:smtp_tls_cert_location_help:
The file name of an RSA certificate to use for TLS - as required.
:end

:smtp_authentication_method_help:
Select the correct authentication method for your email server. Use test to verify that access is working properly.
:end

:smtp_username_password_help:
Enter the username and password to login to your email account. Be aware that the password is stored unencrypted in the email configuration file.
:end

:plugin_install_help:
To download and install a plugin, enter the plg file URL and click **Install**. A window will open
that displays install progress. Do not close this window until install has completed. You may also specify
the local file name of an extension.
:end

:plugin_error_help:
These plugins were not installed because of some kind of installation error.  You should delete these
plugins and then **reboot** your server.*
:end

:plugin_stale_help:
These plugins were not installed because newer code already exists.  It is safe to simply delete these.
:end

:docker_client_general_help:
Templates are a quicker way to setting up Docker Containers on your Unraid server.  There are two types of templates:

**Default templates**<br>
When valid repositories are added to your Docker Repositories page, they will appear in a section on this drop down for you to choose (master categorized by author, then by application template).
After selecting a default template, the page will populate with new information about the application in the Description field, and will typically provide instructions for how to setup the container.
Select a default template when it is the first time you are configuring this application.

**User-defined templates**<br>
Once you've added an application to your system through a Default template,
the settings you specified are saved to your USB flash device to make it easy to rebuild your applications in the event an upgrade were to fail or if another issue occurred.
To rebuild, simply select the previously loaded application from the User-defined list and all the settings for the container will appear populated from your previous setup.
Clicking create will redownload the necessary files for the application and should restore you to a working state.
To delete a User-defined template, select it from the list above and click the red X to the right of it.
:end

:docker_client_name_help:
Give the container a name or leave it as default.  Two characters minimum.  First character must be a-z A-Z 0-9  Remaining characters a-z A-Z 0-9 . - _
:end

:docker_client_overview_help:
A description for the application container.  Supports basic HTML mark-up.
:end

:docker_client_additional_requirements_help:
Any additional requirements the container has.  Supports basic HTML mark-up.
:end

:docker_client_repository_help:
The repository for the application on the Docker Registry.  Format of authorname/appname.
Optionally you can add a : after appname and request a specific version for the container image.
:end

:docker_client_support_thread_help:
Link to a support thread on Lime-Technology's forum.
:end

:docker_client_project_page_help:
Link to the project page (eg: www.plex.tv)
:end

:docker_client_hub_url_help:
The path to the container's repository location on the Docker Hub.
:end

:docker_client_template_url_help:
This URL is used to keep the template updated.
:end

:docker_client_icon_url_help:
Link to the icon image for your application (only displayed on dashboard if Show Dashboard apps under Display Settings is set to Icons).
:end

:docker_client_webui_help:
When you click on an application icon from the Docker Containers page, the WebUI option will link to the path in this field.
Use [IP] to identify the IP of your host and [PORT:####] replacing the #'s for your port.
:end

:docker_extra_parameters_help:
If you wish to append additional commands to your Docker container at run-time, you can specify them here.<br>
For all possible Docker run-time commands, see here: <a href="https://docs.docker.com/reference/run/" target="_blank">https://docs.docker.com/reference/run/</a>
:end

:docker_post_arguments_help:
If you wish to append additional arguments AFTER the container definition, you can specify them here.
The content of this field is container specific.
:end

:docker_cpu_pinning_help:
Checking a CPU core(s) will limit the container to run on the selected cores only. Selecting no cores lets the container run on all available cores (default)
:end

:docker_fixed_ip_help:
If the Bridge type is selected, the application’s network access will be restricted to only communicating on the ports specified in the port mappings section.
If the Host type is selected, the application will be given access to communicate using any port on the host that isn’t already mapped to another in-use application/service.
Generally speaking, it is recommended to leave this setting to its default value as specified per application template.

IMPORTANT NOTE:  If adjusting port mappings, do not modify the settings for the Container port as only the Host port can be adjusted.
:end

:docker_privileged_help:
For containers that require the use of host-device access directly or need full exposure to host capabilities, this option will need to be selected.
For more information, see this link: <a href="https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities" target="_blank">https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities</a>
:end

; sysdevs help - added May 18, 2020
:sysdevs_iommu_groups_help:
This displays a list of IOMMU groups available on your system along with the output of the `lspci` command for each IOMMU group.  The numeric identifiers are used to configure PCI pass-through.

Devices you select will be bound to the vfio-pci driver at boot, which makes them available for assignment to a virtual machine, and also prevents the Linux kernel from automatically binding them to any present host driver.

**Note that selecting a device will bind not only the specified device(s), but *all* other devices in the same IOMMU group as well.**

&nbsp;<i class="fa fa-circle orb green-orb middle"></i>&nbsp;This symbol indicates the device is currently bound to the vfio-pci driver.

&nbsp;<i class="fa fa-retweet grey-orb middle"></i>&nbsp;&nbsp;&nbsp;This symbol indicates the device supports FLR (Function Level Reset).

<input type="checkbox" value="" disabled>&nbsp;&nbsp;If a checkbox is greyed out it means the device is in use by Unraid and can not be passed through.
:end

:sysdevs_thread_pairings_help:
This displays a list of CPU thread pairings.
:end

:sysdevs_usb_devices_help:
This displays the output of the `lsusb` command.  The numeric identifiers are used to configure PCI pass-through.
:end

:sysdevs_scsi_devices_help:
This displays the output of the `lsscsi` command.  The numeric identifiers are used to configure PCI pass-through.

Note that linux groups ATA, SATA and SAS devices with true SCSI devices.
:end

; unraid.net help - added March 11, 2021
:unraidnet_wanpanel_help:
WAN Port is the external TCP port number setup on your router to NAT/Port Forward traffic from the internet to this
Unraid server SSL port for secure web traffic.
:end

:unraidnet_inactivespanel_help:
Click Activate to set up a local git repo for your local USB Flash boot device and connect to a dedicated remote on unraid.net tied to this server.
:end

:unraidnet_changespanel_help:
The Not Up-to-date status indicates there are local files which are changed vs. the remote on unraid.net.

Click Update to push changes to the remote.

Click Changes to see what has changed.
:end

:unraidnet_uptodatepanel_help:
The Up-to-date status indicates your local configuration matches that stored on the unraid.net remote.
:end

:unraidnet_activepanel_help:
Click Deactivate to pause communication with your remote on unraid.net.

Click Reinitialize to erase all change history in both local and unraid.net remote.
:end

; WireGuard help text

:wg_local_name_help:
Use this field to set a name for this connection and make it easily recognizable. The same name will appear in the configuration of any peers.
:end

:wg_generate_keypair_help:
Use the **Generate Keypair** button to automatically create a uniqe private and public key combination.<br>
Or paste in an existing private key, generated by WireGuard. Do **NOT** share this private key with others!
:end

:wg_local_tunnel_network_pool_help:
WireGuard tunnels need an internal IP address. Assign a network pool using the default IPv4 network <?=$netpool['wg0']?>/24
or the default IPv6 network <?=$netpool6['wg0']?>/64 or assign your own network pool from which automatic assignment can be done for both this server and any peers.

The *tunnel network pool* must be a unique network not already existing on the server or any of the peers.
:end

:wg_local_tunnel_network_pool_X_help:
WireGuard tunnels need an internal IP address. Assign a network pool using the default IPv4 network <?=$netpool['wgX']?>/24 or
the default IPv6 network <?=$netpool6['wgX']?>/64 or assign your own network pool from which automatic assignment can be done for both this server and any peers.

The *tunnel network pool* must be a unique network not already existing on the server or any of the peers.
:end

:wg_local_tunnel_address_help:
This field is auto filled-in when a local tunnel network pool is created. It is allowed to overwrite the assignment, but this is normally not necessary. Use with care when changing manually.
:end

:wg_local_tunnel_address_help:
This field is auto filled-in when a local tunnel network pool is created. It is allowed to overwrite the assignment, but this is normally not necessary. Use with care when changing manually.
:end

:wg_local_endpoint_help:
This field is automatically filled in with the public management domain name *www.&lt;hash&gt;.unraid.net* or the public address of the server.<br>
This allows VPN tunnels to be established from external peers to the server.<br>
Configure the correct port forwarding on your router (default port is <?=$netport['wg0']?> but this may be changed) to allow any incoming connections to reach the server.

Users with a registered domain name can use this field to specify how their server is known on the Internet. E.g. www.myserver.mydomain.<br>
Again make sure your router is properly set up.

Note to Cloudflare users: the Cloudflare proxy is designed for http traffic, it is not able to proxy VPN traffic. You must disable the Cloudflare proxy in order to use VPN with your domain.
:end

:wg_local_endpoint_X_help:
This field is automatically filled in with the public management domain name *www.&lt;hash&gt;.unraid.net* or the public address of the server.<br>
This allows VPN tunnels to be established from external peers to the server.<br>
Configure the correct port forwarding on your router (default port is <?=$netport['wgX']?> but this may be changed) to allow any incoming connections to reach the server.

Users with a registered domain name can use this field to specify how their server is known on the Internet. E.g. www.myserver.mydomain.<br>
Again make sure your router is properly set up.

Note to Cloudflare users: the Cloudflare proxy is designed for http traffic, it is not able to proxy VPN traffic. You must disable the Cloudflare proxy in order to use VPN with your domain.
:end

:wg_local_server_uses_nat_help:
When NAT is enabled, the server uses its own LAN address when forwarding traffic from the tunnel to other devices in the LAN network.
Use this setting when no router modifications are desired, but this approach doesn't work with Docker containers using custom IP addressess.

When NAT is disabled, the server uses the WireGuard tunnel address when forwarding traffic.
In this case it is required that the default gateway (router) has a static route configured to refer tunnel address back to the server.
:end

:wg_local_gateway_uses_upnp_help:
Defaults to YES if the local gateway has UPnP enabled and is responding to requests.<br>
When UPnP is enabled, it is not necessary to configure port forwarding on the router to allow incoming tunnel connections. This is done automatically.
:end

:wg_local_tunnel_firewall_help:
The firewall function controls remote access over the WireGuard tunnel to specific hosts and/or subnets.<br>
The default rule is "deny" and blocks addresses specified in this field, while allowing all others.<br>
Changing the rule to "allow" inverts the selection, meaning only the specified addresses are allowed and all others are blocked.<br>
Use a comma as separator when more than one IP address is entered.
:end

:wg_mtu_size_help:
Leave this to the default automatic mode to select the MTU size. This MTU size is common for all peer connections.
:end

:wg_peer_configuration_help:
The <i class='fa fa-fw fa-eye'></i> icon is used to view a peer's configuration. A configuration can be downloaded or read directly for instant set up of the peer.<br>
The icon is disabled when no peer configuration exists or the user has made changes to the existing settings which are not applied yet.

The <i class='fa fa-fw fa-key'></i> icon is used to show or hide the private, public and preshared keys. Note that these fields are always shown when no keys are set.
:end

:wg_peer_name_help:
Use this field to set a name for this peer connection and make it easily recognizable. The same name will appear in the configuration of the peer at the opposite side.
:end

: wg_peer_preshared_key_help:
For added security a preshared key can be used. Use the **Generate Key** button to automatically create a unique preshared key.<br>
This key is the same at both server and peer side and is added to the peer configuration as well.
:end

:wg_peer_tunnel_address_help:
This field is auto filled-in when a local tunnel network pool is created. It is allowed to overwrite the assignment, but this is normally not necessary. Use with care when changing manually.<br>
Each peer must have a unique tunnel IP address.
:end

:wg_peer_endpoint_help:
When this field is left empty, the server operates in *passive mode* to establish the tunnel. It must be the peer which starts the tunnel.

When an IP address is entered to connect to the peer, the server operates in *active mode* and establishes the tunnel to the peer as soon as there is data to send.

*Note: this field is mandatory for "server-to-server" and "LAN-to-LAN" connections*
:end

:wg_peer_allowed_ips_help:
This field is automatically filled in with the tunnel address of the peer. This allows the server to reach the peer over the tunnel.<br>
When the peer is another server or router with additional networks, then their subnets can be added here to make these networks reachable over the tunnel.
:end

:wg_peer_dns_server_help:
Use this entry to overwrite the current DNS server assignment of the Peer
:end

:wg_persistent_keepalive_help:
By default a WireGuard tunnel stays silent when no traffic is present, which may cause the connection to drop.
Normally this isn't a problem since a WireGuard tunnel is automatically re-established when it is needed.<br>
A keepalive timer will hold the connection open, for most situations a timer value of 20 seconds is suitable.

Note that for mobile devices this will use more data and drain your battery faster.
:end

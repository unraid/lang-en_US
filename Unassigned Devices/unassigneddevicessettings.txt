Add=
Auto Mount USB Devices=
Change Disk UUID=
Change UUID=
Change the disk UUID=
Common Script=
Common Settings=
Destructive Mode=
Disk spin down is managed by Unraid=
Enable NFS export=
Enable SMB Security=
Enter Disk Password=
Force all SMB remote shares to SMB v1=
Legacy Mount Point Compatibility=
Mount SSDs with discard option=
must be enabled in SMB Settings to enable SMB v1=
NFS Security=
NFS Settings=
NFS must be enabled to enable NFS Export=
Rule=
SMB Security=
Select Disk to change UUID=
Select Disk=
Set Encrypted Disk Password=
Set Password=
Set the disk Password=
Specify SMB Version when Mounting Remote Shares=
Spin down disks=
The Unassigned Devices Plus plugin must be installed to enable Destructive Mode=
to SMB share config=
Unassigned Devices=

; Help
;
:ud_settings_plus_plug:
> **Note:** The 'Unassigned Devices Plus' plugin must be installed in order to mount HFS+ and exFAT disk formats, and enable destructive mode.
:end

:ud_settings_common_script_plug:
> If set, this script will run before the device script.  The action is in the environment variable **$ACTION**. Be sure you reference all commands with their full path.
:end

:ud_settings_destructive_plug:
> If enabled, this will allow you to erase and format partitions using Unassigned Devices. This cannot be enabled unless the 'Unassigned Devices Plus' plugin is installed.
:end

:ud_settings_mount_usb_devices_plug:
> When set to **Yes**, will auto mount a new USB device and share it without user intervention.
:end

:ud_settings_discard_plug:
> Mount SSDs that support discard with 'discard' option.  If you are using the SSD Trim Settings to do a periodic trim of SSDs you can set this to **No**.
:end

:ud_settings_spin_down_plug:
> Set to **Yes** to set a 15 minute disk spin down timer.  Set to **No** to keep disks spun up.  Unraid version 6.9 and higher manages disk spin down.
:end

:ud_settings_symlinks_plug:
> Set to **Yes** to create symlinks for /mnt/remotes/ at /mnt/disks/.
>
> This is for backwards compatibility of VM and Docker Container mappings to the /mnt/disks/ mount point.
> You are encouraged to change your mappings to the /mnt/remotes/ mount point.
>
> If you do not need the backwards compatibility, leave it set to **No**.
:end

:ud_settings_specify_smb_vers_plug:
> Set to **No** for Unassigned Devices to first try to mount remote shares by not setting the SMB version when mounting.
>
> Set to **Yes** for Unassigned Devices to only mount SMB remote shares specifying the SMB version.
>
> Some remote servers need to have the version specified.
:end

:ud_settings_smb_security_plug:
> Set the user level of SMB Security.
>
> + Set to **Yes** to enable SMB Security on SMB shares.  Set access by user to allow access and whether or not the user can write to the share.
> + Set to **Hidden** to enable SMB Security on SMB shares that will not be visible.  Set access by user to allow access and whether or not the user can write to the share.
> + Set to **No** will share devices, SMB/NFS, and iso Mounts Public with read and write access.
:end

:ud_settings_case_sensitive_plug:
> Controls whether filenames are case-sensitive.
>
> The default setting of **Auto** allows clients that support case sensitive filenames (Linux CIFSVFS) to tell the Samba server on a per-packet basis that they wish to access the file system in a case-sensitive manner (to support UNIX case sensitive semantics). No Windows system supports case-sensitive filenames so setting this option to auto is the same as setting it to No for them; however, the case of filenames passed by a Windows client will be preserved. This setting can result in reduced performance with very large directories because Samba must do a filename search and match on passed names.
>
> A setting of **Yes** means that files are created with the case that the client passes, and only accessible using this same case. This will speed very large directory access, but some Windows applications may not function properly with this setting. For example, if "MyFile" is created but a Windows app attempts to open "MYFILE" (which is permitted in Windows), it will not be found.
>
> A value of **Forced lower** is special: the case of all incoming client filenames, not just new filenames, will be set to lower-case. In other words, no matter what mixed case name is created on the Windows side, it will be stored and accessed in all lower-case. This ensures all Windows apps will properly find any file regardless of case, but case will not be preserved in folder listings.
:end

:ud_settings_force_user_plug:
> There are times when permissions on SMB shares aren't handled as expected.  Turning this feature on can help with those permissions.
> This applies to all devices mounted with Unassigned Devices.
> The down side is that it overrides Linux group permissions.  If you are unsure about whether or not this is necessary, leave it enabled.
:end

:ud_settings_nfs_shares_plug:
> Set to **Yes** to export NFS shares.  Shares are exported Public with read and write access or Private with the rule you set.  Access is controlled with permission settings on files and folders.
:end

:ud_settings_disk_pass_plug:
> Select the disk that you want to set a Password.  This is the password for this disk only and does not affect the array password/passphrase.  Leave password blank to use the array password/passphrase for luks encrypted disks.
:end

:ud_settings_change_uuid_plug:
> Select the disk that you want to change the UUID.  This is useful when a XFS formatted disk has been removed from the array and has the same UUID as an array disk.  Drive must be unmounted to change the UUID.
:end
